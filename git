#!/bin/bash

set -e

usage() {
  cat <<EOF
Usage: $0 [OPTIONS]

Options:
  -L    Setup Git user identity and credential helper (login)
  -C    Install Gerrit Change-Id commit-msg hook
  -A    Setup Git aliases
  -h    Show this help message

You can combine options, e.g. $0 -L -A
EOF
  exit 1
}

# Parse flags
FLAG_LOGIN=0
FLAG_HOOK=0
FLAG_ALIAS=0

while getopts "LCAh" opt; do
  case $opt in
    L) FLAG_LOGIN=1 ;;
    C) FLAG_HOOK=1 ;;
    A) FLAG_ALIAS=1 ;;
    h) usage ;;
    *) usage ;;
  esac
done

if [[ $FLAG_LOGIN -eq 0 && $FLAG_HOOK -eq 0 && $FLAG_ALIAS -eq 0 ]]; then
  usage
fi

# --- FUNCTIONS ---

check_dependencies() {
  for cmd in git gh jq; do
    if ! command -v "$cmd" &> /dev/null; then
      echo "‚ùå Required command '$cmd' is not installed."
      case $cmd in
        gh)  echo "üëâ Install GitHub CLI: https://cli.github.com/" ;;
        jq)  echo "üëâ Install jq (Linux): sudo apt install jq" ;;
        git) echo "üëâ Install Git: https://git-scm.com/downloads" ;;
      esac
      exit 1
    fi
  done
}

setup_login() {
  echo "=============================================="
  echo " Git Identity & Credential Setup with GitHub CLI"
  echo "=============================================="

  echo -e "\nüîê Logging into GitHub..."
  if ! gh auth login; then
    echo "‚ùå GitHub authentication failed. Exiting."
    exit 1
  fi
  echo "‚úÖ GitHub authentication successful."

  echo -e "\nüì¶ Fetching GitHub user info..."
  GH_USER_JSON=$(gh api user)
  GH_USERNAME=$(echo "$GH_USER_JSON" | jq -r '.login')
  GH_EMAIL=$(echo "$GH_USER_JSON" | jq -r '.email')

  if [[ "$GH_EMAIL" == "null" || -z "$GH_EMAIL" ]]; then
    echo "‚ö†Ô∏è  Your GitHub email is not publicly visible."
    read -rp "Please enter the email you want to use for Git commits: " GH_EMAIL
  fi

  echo -e "\nGit will be configured with the following identity:"
  echo "  Username: $GH_USERNAME"
  echo "  Email:    $GH_EMAIL"
  read -rp "Continue with these settings? (y/n): " CONFIRM
  if [[ ! "$CONFIRM" =~ ^[Yy]$ ]]; then
    echo "‚ùå Setup aborted by user."
    exit 1
  fi

  git config --global user.name "$GH_USERNAME"
  git config --global user.email "$GH_EMAIL"
  echo "‚úÖ Git user identity has been set."

  echo -e "\nChoose Git credential helper:"
  echo "  1) GitHub CLI (recommended)"
  echo "  2) Git Credential Manager (manager-core)"
  read -rp "Enter choice [1 or 2]: " HELPER_CHOICE

  case "$HELPER_CHOICE" in
    2)
      git config --global credential.helper manager-core
      echo "‚úÖ Git credential helper set to: manager-core"
      ;;
    *)
      git config --global credential.helper '!gh auth git-credential'
      echo "‚úÖ Git credential helper set to: GitHub CLI"
      ;;
  esac

  echo -e "\nüéâ Setup complete! Here is your current Git config:"
  echo "  User Name:         $(git config --global user.name)"
  echo "  User Email:        $(git config --global user.email)"
  echo "  Credential Helper: $(git config --global credential.helper)"
}

setup_aliases() {
  echo "==============================="
  echo "üîß Setting up Git Aliases"
  echo "==============================="

  declare -A aliases=(
    [c]="commit -s"
    [cam]="commit --amend"
    [cm]="commit"
    [csm]="commit -s -m"
    [ca]="cherry-pick --abort"
    [cr]="cherry-pick --signoff"
    [p]="push -f"
    [cc]="cherry-pick --continue"
    [cs]="cherry-pick --skip"
    [cp]="cherry-pick"
    [r]="revert"
    [rc]="revert --continue"
    [ro]="remote rm origin"
    [ra]="remote add origin"
    [s]="switch -c"
    [b]="branch"
    [rh]="reset --hard"
    [ch]="checkout"
    [f]="fetch"
    [m]="merge"
  )

  for key in "${!aliases[@]}"; do
    git config --global alias."$key" "${aliases[$key]}"
    echo "  ‚úî alias.$key = ${aliases[$key]}"
  done

  echo "‚úÖ All Git aliases have been configured."
}

setup_commit_hook() {
  HOOKS_DIR="$HOME/.githooks"

  echo "üîß Installing Gerrit Change-Id commit-msg hook globally..."

  mkdir -p "$HOOKS_DIR"

  if curl -fsSL -o "$HOOKS_DIR/commit-msg" https://gerrit-review.googlesource.com/tools/hooks/commit-msg; then
    chmod +x "$HOOKS_DIR/commit-msg"
    git config --global core.hooksPath "$HOOKS_DIR"
    echo "‚úÖ Gerrit Change-Id commit-msg hook installed and configured globally."
  else
    echo "‚ùå Failed to download Gerrit commit-msg hook."
    exit 1
  fi
}

# --- MAIN EXECUTION ---

# Check dependencies if login or aliases or hook needed (all require git at least)
if (( FLAG_LOGIN || FLAG_ALIAS || FLAG_HOOK )); then
  check_dependencies
fi

# Run requested setups
(( FLAG_LOGIN )) && setup_login
(( FLAG_ALIAS )) && setup_aliases
(( FLAG_HOOK )) && setup_commit_hook

echo -e "\nAll requested setups are done. üéâ"
